{"version":3,"sources":["Select.js","loading.svg","App.js","index.js"],"names":["Select","props","class","for","des","id","onChange","handleChange","value","data","map","country","countries_url","App","useState","countries","setcountries","loading","setloading","from","setfrom","to","setto","converting","setconverting","amount","setamount","rate","setrate","useEffect","a","fetch","res","json","arr","keys","Object","i","length","includes","currencyName","currencyId","push","sort","getcountries","convert","console","log","src","Loading","alt","className","e","target","type","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7907d16.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Select(props) {\n  return (\n    <div>\n      <div class=\"input-group mb-3\">\n        <label class=\"input-group-text\" for=\"inputGroupSelect01\">\n          {props.des}\n        </label>\n        <select\n          class=\"form-select\"\n          id=\"inputGroupSelect01\"\n          onChange={props.handleChange}\n          value={props.value}\n        >\n          {props.data.map((country) => {\n            return <option value={country}>{country}</option>;\n          })}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default Select;\n","export default __webpack_public_path__ + \"static/media/loading.a2b57eb0.svg\";","import React,{useState,useEffect} from \"react\"\nimport Select from \"./Select\";\nimport Loading from \"./loading.svg\";\n\n\nconst countries_url=\"https://g-currency-converter.herokuapp.com/countries\";\nconst base=\"https://g-currency-converter.herokuapp.com/\";\n\nfunction App() {\n  const [countries, setcountries] = useState([]);\n  const [loading, setloading] = useState(true);\n  const [from, setfrom] = useState('U.S. Dollar (USD)');\n  const [to, setto] = useState('Indian rupee (INR)');\n  const [converting, setconverting] = useState(false);\n  const [amount, setamount] = useState(1);\n  const [rate, setrate] = useState(null);\n\n    useEffect(() => {\n      async function getcountries(){\n        const res=await fetch(countries_url);\n        const data=await res.json();\n       \n        let arr=[];\n        let keys=Object.keys(data);\n        for(let i=0;i<keys.length;i++){\n          if(!arr.includes(data[keys[i]].currencyName+` (${data[keys[i]].currencyId})`)){\n            arr.push(data[keys[i]].currencyName+` (${data[keys[i]].currencyId})`);\n          }\n        }\n        arr.sort();\n        setcountries(arr);\n        //console.log(arr);\n\n        setloading(false);\n      }\n      getcountries();\n      \n      return () => {\n        \n      }\n    }, [])\n\n    useEffect(() => {\n      \n       const convert=async()=>{\n       setconverting(true);\n       console.log(from,to);\n         const res=await fetch(base+`getrates?from=${from}&to=${to}`);\n         const data=await res.json();\n         setrate(data.rate)\n         //console.log(data);\n         setconverting(false);\n\n       \n      }\n      convert();\n      return () => {\n        \n      }\n    }, [from,to])\n\n    function changefrom(e){\n      \n      console.log(e.target.value);\n      setrate(null);\n      setfrom(e.target.value)\n    }\n\n    function changeto(e){\n      setrate(null);\n     setto(e.target.value)\n    }\n\n    if(loading){\n      return <div class=\"loading\">\n        {/* <h1>Loading...</h1>  */}\n        <img src={Loading} alt=\"Loading\"></img>\n      </div>\n    }\n\n   \n\n  return (\n    <div className=\"container\">\n      <div class=\"card text-center\">\n        <div class=\"card-header\">Currency Converter</div>\n        <div class=\"card-body\">\n       \n         <Select data={countries} handleChange={changefrom} des=\"From\" value={from}/>\n         <div class=\"input-group mb-3\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Amount</span>\n          <input type=\"number\"  value={amount} onChange={(e)=>setamount(e.target.value)} class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\"/>\n        </div>\n         <Select data={countries} handleChange={changeto} des=\"To\" value={to}/>\n         \n          <h2>{converting && \"Converting\"}</h2>\n        </div>\n        \n        {\n          rate!=null && <h2>{(amount*rate).toFixed(2)}</h2>\n        }\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}